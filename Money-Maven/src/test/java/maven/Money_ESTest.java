/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 09 01:04:32 GMT 2025
 */

package maven;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import maven.Money;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Money_ESTest extends Money_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Money money0 = new Money(1216, "U");
      Money money1 = new Money(0, "U");
      boolean boolean0 = money0.equals(money1);
      assertFalse(boolean0);
      assertEquals(1216, money0.getAmount());
      assertFalse(money1.equals((Object)money0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Money money0 = new Money(0, (String) null);
      money0.getCurrency();
      assertEquals(0, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Money money0 = new Money((-1), "");
      money0.getCurrency();
      assertEquals((-1), money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Money money0 = new Money(1, "Zr(");
      int int0 = money0.getAmount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Money money0 = new Money((-886), "");
      int int0 = money0.getAmount();
      assertEquals((-886), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Money money0 = new Money(0, "4`?(wx~sxVo#k^LQ");
      Money money1 = money0.add(money0);
      assertEquals(0, money1.getAmount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Money money0 = new Money(0, "j+6U{2K2OU$6");
      Money money1 = new Money((-1), "");
      Money money2 = money0.add(money1);
      assertEquals((-1), money1.getAmount());
      assertEquals((-1), money2.getAmount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Money money0 = new Money(0, (String) null);
      // Undeclared exception!
      try { 
        money0.equals(money0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Money money0 = new Money(2555, "Gkk+d%0A;aZ@kNq");
      // Undeclared exception!
      try { 
        money0.add((Money) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("maven.Money", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Money money0 = new Money(0, "4`?(wx~sxVo#k^LQ");
      money0.getCurrency();
      assertEquals(0, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Money money0 = new Money(0, "4`?(wx~sxVo#k^LQ");
      int int0 = money0.getAmount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Money money0 = new Money(1377, "Lj]");
      Money money1 = new Money(1377, "LjP");
      boolean boolean0 = money0.equals(money1);
      assertFalse(boolean0);
      assertEquals(1377, money1.getAmount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Money money0 = new Money(1377, "Lj]");
      Object object0 = new Object();
      boolean boolean0 = money0.equals(object0);
      assertFalse(boolean0);
      assertEquals(1377, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Money money0 = new Money(1377, "Lj]");
      boolean boolean0 = money0.equals(money0);
      assertTrue(boolean0);
      assertEquals(1377, money0.getAmount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Money money0 = new Money(1377, "Lj]");
      Money money1 = money0.add(money0);
      boolean boolean0 = money0.equals(money1);
      assertEquals(1377, money0.getAmount());
      assertEquals(2754, money1.getAmount());
      assertFalse(boolean0);
      assertFalse(money1.equals((Object)money0));
  }
}
